AWSTemplateFormatVersion: "2010-09-09"
Description: "Merlin Pipeline Management: Merlin Gateway"
Parameters:
  Branch:
    Type: String
    AllowedValues:
      - master
      - develop
  ManagedApp:
    Type: String
    Description: The application (or project) being deployed by this pipeline. This must match the repo name.
  ArtifactBucket:
    Type: String
  CodeBuildRoleArn:
    Type: String
  CodePipelineRoleArn:
    Type: String
  CloudFormationDeployerRoleArn:
    Type: String
  TemplatePath:
    Type: String
    Description: "Sample Value (this is an output of the app's buildspec yml): merlin-gateway-template.yml"
  CfnParamsInputKey:
    Type: String
    Description: "Sample Value (this is an output of the app's buildspec yml): cfn-input-params.json"

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        EncryptionDisabled: false
        NamespaceType: NONE
        OverrideArtifactName: false
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      Description: !Sub "Build the ${ManagedApp} project"
      EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
      Environment:
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:2.0"
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub "/aws/codepipeline/${ManagedApp}"
          Status: ENABLED
      Name: !Sub "${Branch}-${ManagedApp}-build"
      QueuedTimeoutInMinutes: 480
      ServiceRole: !Ref CodeBuildRoleArn
      Source:
        Type: CODEPIPELINE
        BuildSpec: "aws-artifacts/codebuild/buildspec.yml"
        InsecureSsl: false
      TimeoutInMinutes: 60

  CodePipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: 100
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: "refs/heads/{Branch}"
      RegisterWithThirdParty: true
      TargetAction: Source
      TargetPipeline: !Ref CodePipeline
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Name: !Sub "${Branch}-${ManagedApp}"
      RoleArn: !Ref CodePipelineRoleArn
      Stages:
      - Name: Source
        Actions:
        - ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Branch: !Ref Branch
            OAuthToken: "{{resolve:ssm:/codepipeline/oauthtoken:1}}"
            Owner: dcbove
            PollForSourceChanges: false
            Repo: !Ref ManagedApp
          Name: Source
          Namespace: SourceVariables
          OutputArtifacts:
          - Name: SourceArtifact
          RunOrder: 100
      - Name: Build
        Actions:
        - ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          Configuration:
            ProjectName: !Ref CodeBuildProject
          InputArtifacts:
          - Name: SourceArtifact
          Name: Build
          Namespace: BuildVariables
          OutputArtifacts:
          - Name: BuildArtifact
          RunOrder: 200
      - Name: Deploy
        Actions:
        - ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: REPLACE_ON_FAILURE
            Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
            ParameterOverrides: |
              {
                "ArtifactBucket" : { "Fn::GetArtifactAtt" : ["BuildArtifact", "BucketName"]}
              }
            RoleArn: !Ref CloudFormationDeployerRoleArn
            StackName: !Sub
              - "${branch}-${managedapp}"
              - branch: !Ref Branch
                managedapp: !Ref ManagedApp
            TemplateConfiguration: !Sub "BuildArtifact::${CfnParamsInputKey}"
            TemplatePath: !Sub "BuildArtifact::${TemplatePath}"
          InputArtifacts:
          - Name: SourceArtifact
          - Name: BuildArtifact
          Name: Deploy
          Namespace: DeployVariables
          RunOrder: 300

